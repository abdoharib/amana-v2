/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection ES6UnusedImports
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-resolver' {
  export type ParamParserCustom = never
}

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    'root': RouteRecordInfo<
      'root',
      '/',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '$error': RouteRecordInfo<
      '$error',
      '/:error(.*)',
      { error: ParamValue<true> },
      { error: ParamValue<false> },
      | never
    >,
    'advices': RouteRecordInfo<
      'advices',
      '/advices',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'charity-work': RouteRecordInfo<
      'charity-work',
      '/charity-work',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'education-stages': RouteRecordInfo<
      'education-stages',
      '/education-stages',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'educational-content': RouteRecordInfo<
      'educational-content',
      '/educational-content',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'items': RouteRecordInfo<
      'items',
      '/items',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'items-create': RouteRecordInfo<
      'items-create',
      '/items/create',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'items-show-id': RouteRecordInfo<
      'items-show-id',
      '/items/show/:id',
      { id: ParamValue<true> },
      { id: ParamValue<false> },
      | never
    >,
    'items-update-id': RouteRecordInfo<
      'items-update-id',
      '/items/update/:id',
      { id: ParamValue<true> },
      { id: ParamValue<false> },
      | never
    >,
    'kids': RouteRecordInfo<
      'kids',
      '/kids',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'letters': RouteRecordInfo<
      'letters',
      '/letters',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'login': RouteRecordInfo<
      'login',
      '/login',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'moral-values': RouteRecordInfo<
      'moral-values',
      '/moral-values',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'not-authorized': RouteRecordInfo<
      'not-authorized',
      '/not-authorized',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'notifications': RouteRecordInfo<
      'notifications',
      '/notifications',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'numbers': RouteRecordInfo<
      'numbers',
      '/numbers',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'posts': RouteRecordInfo<
      'posts',
      '/posts',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'prayers': RouteRecordInfo<
      'prayers',
      '/prayers',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'prayers-show-id': RouteRecordInfo<
      'prayers-show-id',
      '/prayers/show/:id',
      { id: ParamValue<true> },
      { id: ParamValue<false> },
      | never
    >,
    'prophet-stories': RouteRecordInfo<
      'prophet-stories',
      '/prophet-stories',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'prophet-stories-create': RouteRecordInfo<
      'prophet-stories-create',
      '/prophet-stories/create',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'prophet-stories-show-id': RouteRecordInfo<
      'prophet-stories-show-id',
      '/prophet-stories/show/:id',
      { id: ParamValue<true> },
      { id: ParamValue<false> },
      | never
    >,
    'prophet-stories-update-id': RouteRecordInfo<
      'prophet-stories-update-id',
      '/prophet-stories/update/:id',
      { id: ParamValue<true> },
      { id: ParamValue<false> },
      | never
    >,
    'second-page': RouteRecordInfo<
      'second-page',
      '/second-page',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'stories': RouteRecordInfo<
      'stories',
      '/stories',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    'users-type': RouteRecordInfo<
      'users-type',
      '/users/:type',
      { type: ParamValue<true> },
      { type: ParamValue<false> },
      | never
    >,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the \`sfc-typed-router\` Volar plugin to automatically type \`useRoute()\`.
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'resources/js/pages/index.vue': {
      routes:
        | 'root'
      views:
        | never
    }
    'resources/js/pages/[...error].vue': {
      routes:
        | '$error'
      views:
        | never
    }
    'resources/js/pages/advices/index.vue': {
      routes:
        | 'advices'
      views:
        | never
    }
    'resources/js/pages/charity-work/index.vue': {
      routes:
        | 'charity-work'
      views:
        | never
    }
    'resources/js/pages/education-stages/index.vue': {
      routes:
        | 'education-stages'
      views:
        | never
    }
    'resources/js/pages/educational-content/index.vue': {
      routes:
        | 'educational-content'
      views:
        | never
    }
    'resources/js/pages/items/index.vue': {
      routes:
        | 'items'
      views:
        | never
    }
    'resources/js/pages/items/create.vue': {
      routes:
        | 'items-create'
      views:
        | never
    }
    'resources/js/pages/items/show/[id].vue': {
      routes:
        | 'items-show-id'
      views:
        | never
    }
    'resources/js/pages/items/update/[id].vue': {
      routes:
        | 'items-update-id'
      views:
        | never
    }
    'resources/js/pages/kids/index.vue': {
      routes:
        | 'kids'
      views:
        | never
    }
    'resources/js/pages/letters/index.vue': {
      routes:
        | 'letters'
      views:
        | never
    }
    'resources/js/pages/login.vue': {
      routes:
        | 'login'
      views:
        | never
    }
    'resources/js/pages/moral-values/index.vue': {
      routes:
        | 'moral-values'
      views:
        | never
    }
    'resources/js/pages/not-authorized.vue': {
      routes:
        | 'not-authorized'
      views:
        | never
    }
    'resources/js/pages/notifications/index.vue': {
      routes:
        | 'notifications'
      views:
        | never
    }
    'resources/js/pages/numbers/index.vue': {
      routes:
        | 'numbers'
      views:
        | never
    }
    'resources/js/pages/posts/index.vue': {
      routes:
        | 'posts'
      views:
        | never
    }
    'resources/js/pages/prayers/index.vue': {
      routes:
        | 'prayers'
      views:
        | never
    }
    'resources/js/pages/prayers/show/[id].vue': {
      routes:
        | 'prayers-show-id'
      views:
        | never
    }
    'resources/js/pages/prophet-stories/index.vue': {
      routes:
        | 'prophet-stories'
      views:
        | never
    }
    'resources/js/pages/prophet-stories/create.vue': {
      routes:
        | 'prophet-stories-create'
      views:
        | never
    }
    'resources/js/pages/prophet-stories/show/[id].vue': {
      routes:
        | 'prophet-stories-show-id'
      views:
        | never
    }
    'resources/js/pages/prophet-stories/update/[id].vue': {
      routes:
        | 'prophet-stories-update-id'
      views:
        | never
    }
    'resources/js/pages/second-page.vue': {
      routes:
        | 'second-page'
      views:
        | never
    }
    'resources/js/pages/stories/index.vue': {
      routes:
        | 'stories'
      views:
        | never
    }
    'resources/js/pages/users/[type].vue': {
      routes:
        | 'users-type'
      views:
        | never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the \`sfc-typed-router\` Volar plugin to automatically type \`useRoute()\`.
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
